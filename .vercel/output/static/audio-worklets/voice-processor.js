class VoiceProcessor extends AudioWorkletProcessor{constructor(e){super(),this.sampleRate=e.processorOptions?.sampleRate||24e3,this.enableNoiseReduction=e.processorOptions?.enableNoiseReduction??!0,this.enableEchoCancellation=e.processorOptions?.enableEchoCancellation??!0,this.noiseThreshold=.01,this.noiseReductionFactor=.5,this.spectralSubtractionAlpha=2,this.vadThreshold=.015,this.vadHangoverTime=8,this.vadHangoverCount=0,this.isVoiceActive=!1,this.frameSize=128,this.hopSize=64,this.inputBuffer=new Float32Array(2*this.frameSize),this.outputBuffer=new Float32Array(2*this.frameSize),this.bufferIndex=0,this.fftSize=256,this.window=this.createHannWindow(this.fftSize),this.noiseProfile=new Float32Array(this.fftSize/2+1),this.noiseProfileFrames=0,this.maxNoiseProfileFrames=10,this.echoDelayBuffer=new Float32Array(.5*this.sampleRate),this.echoDelayIndex=0,this.audioLevel=0,this.audioLevelSmoothingFactor=.95,this.frameCount=0,this.reportingInterval=10,this.latencyStartTime=0,this.latencyMeasurementActive=!1}process(e,t,i){const s=e[0],o=t[0];if(!(s&&s[0]&&o&&o[0]))return!0;const a=s[0],r=o[0];this.latencyMeasurementActive||(this.latencyStartTime=currentTime,this.latencyMeasurementActive=!0);for(let e=0;e<a.length;e++){if(this.inputBuffer[this.bufferIndex]=a[e],this.bufferIndex===this.frameSize-1){this.processFrame(this.inputBuffer.slice(0,this.frameSize)).forEach(((e,t)=>{this.outputBuffer[t]=e})),this.bufferIndex=0}else this.bufferIndex++;const t=(this.bufferIndex+this.frameSize)%(2*this.frameSize);r[e]=this.outputBuffer[t]||0}return this.updateAudioLevel(a),this.frameCount++,this.frameCount%this.reportingInterval==0&&this.reportMetrics(),!0}processFrame(e){let t=new Float32Array(e);const i=this.calculateFrameEnergy(e);return this.updateVAD(i),this.isVoiceActive||this.vadHangoverCount>0?(this.enableNoiseReduction&&(t=this.applyNoiseReduction(t)),this.enableEchoCancellation&&(t=this.applyEchoCancellation(t)),t=this.applyDynamicRangeCompression(t)):(this.noiseProfileFrames<this.maxNoiseProfileFrames&&this.updateNoiseProfile(e),t=t.map((e=>.1*e))),t}calculateFrameEnergy(e){let t=0;for(let i=0;i<e.length;i++)t+=e[i]*e[i];return Math.sqrt(t/e.length)}updateVAD(e){const t=this.isVoiceActive;e>this.vadThreshold?(this.isVoiceActive=!0,this.vadHangoverCount=this.vadHangoverTime):this.vadHangoverCount>0?this.vadHangoverCount--:this.isVoiceActive=!1,t!==this.isVoiceActive&&this.port.postMessage({type:"voiceActivity",data:this.isVoiceActive})}applyNoiseReduction(e){if(this.noiseProfileFrames<this.maxNoiseProfileFrames)return e;const t=new Float32Array(e.length);for(let i=0;i<e.length;i++){if(Math.abs(e[i])>this.noiseProfile[i%this.noiseProfile.length]*this.spectralSubtractionAlpha)t[i]=e[i];else{const s=Math.max(.1,1-this.noiseReductionFactor);t[i]=e[i]*s}}return t}applyEchoCancellation(e){const t=new Float32Array(e.length);for(let i=0;i<e.length;i++){this.echoDelayBuffer[this.echoDelayIndex]=e[i];const s=this.echoDelayBuffer[(this.echoDelayIndex-Math.floor(.1*this.sampleRate))%this.echoDelayBuffer.length];t[i]=e[i]-.3*s,this.echoDelayIndex=(this.echoDelayIndex+1)%this.echoDelayBuffer.length}return t}applyDynamicRangeCompression(e){const t=new Float32Array(e.length),i=.7,s=.1;for(let o=0;o<e.length;o++){const a=Math.abs(e[o]);let r=a;if(a>i+s){r=i+(a-i)/4}else if(a>.6){r=a+(a-.6)/.2*((a-i)/4)}t[o]=e[o]>=0?r:-r}return t}updateNoiseProfile(e){const t=this.getSpectralMagnitude(e);if(0===this.noiseProfileFrames)for(let e=0;e<this.noiseProfile.length;e++)this.noiseProfile[e]=t[e]||0;else{const e=.1;for(let i=0;i<this.noiseProfile.length;i++)this.noiseProfile[i]=e*(t[i]||0)+(1-e)*this.noiseProfile[i]}this.noiseProfileFrames++}getSpectralMagnitude(e){const t=new Float32Array(this.noiseProfile.length),i=e.length/t.length;for(let s=0;s<t.length;s++){let o=0;const a=Math.floor(s*i),r=Math.min(Math.floor((s+1)*i),e.length);for(let t=a;t<r;t++)o+=Math.abs(e[t]);t[s]=o/(r-a)}return t}updateAudioLevel(e){let t=0;for(let i=0;i<e.length;i++)t+=e[i]*e[i];const i=Math.sqrt(t/e.length);this.audioLevel=this.audioLevel*this.audioLevelSmoothingFactor+i*(1-this.audioLevelSmoothingFactor)}createHannWindow(e){const t=new Float32Array(e);for(let i=0;i<e;i++)t[i]=.5*(1-Math.cos(2*Math.PI*i/(e-1)));return t}reportMetrics(){this.port.postMessage({type:"audioLevel",data:this.audioLevel});const e=this.noiseProfile.reduce(((e,t)=>e+t),0)/this.noiseProfile.length;if(e>.05&&this.port.postMessage({type:"noiseDetected",data:{level:e,threshold:.05}}),this.latencyMeasurementActive){const e=1e3*(currentTime-this.latencyStartTime);this.port.postMessage({type:"latencyUpdate",data:{processingLatency:e}}),this.latencyMeasurementActive=!1}}handleMessage(e){const{type:t,data:i}=e.data;switch(t){case"updateNoiseThreshold":this.noiseThreshold=i.threshold;break;case"updateVADThreshold":this.vadThreshold=i.threshold;break;case"resetNoiseProfile":this.noiseProfile.fill(0),this.noiseProfileFrames=0;break;case"enableNoiseReduction":this.enableNoiseReduction=i.enabled;break;case"enableEchoCancellation":this.enableEchoCancellation=i.enabled}}}registerProcessor("voice-processor",VoiceProcessor);