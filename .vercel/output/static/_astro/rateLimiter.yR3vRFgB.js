const __vite_import_meta_env__={ASSETS_PREFIX:void 0,BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,PUBLIC_CALENDLY_URL:"https://calendly.com/your-username",PUBLIC_GA_MEASUREMENT_ID:"G-XXXXXXXXXX",PUBLIC_SITE_NAME:"Executive AI Training",PUBLIC_SITE_URL:"https://executiveaitraining.com",SITE:"https://executiveaitraining.com",SSR:!0};class AdvancedRateLimiter{constructor(e){this.config=e,this.cleanupInterval=setInterval((()=>{this.cleanup()}),3e5)}store=new Map;cleanupInterval;suspiciousIPs=new Set;checkLimit(e,t){if(this.config.whitelist&&this.isWhitelisted(t))return{allowed:!0,remaining:this.config.maxRequests,resetTime:Date.now()+this.config.windowMs,warning:this.config.isDevelopment?"Development mode - rate limiting bypassed":void 0};const i=this.config.keyGenerator?this.config.keyGenerator(e,t):t,s=Date.now(),o=s-this.config.windowMs;let n=this.store.get(i);if(!n||n.resetTime<=s)return n={count:1,resetTime:s+this.config.windowMs,windowStart:s,suspiciousActivity:!1},this.store.set(i,n),{allowed:!0,remaining:this.config.maxRequests-1,resetTime:n.resetTime};n.windowStart<=o&&(n.windowStart=o,n.count=Math.max(1,Math.floor(.8*n.count)));const r=this.config.suspiciousThreshold||(this.config.isDevelopment?.95:.8);if(n.count>=this.config.maxRequests*r&&this.detectSuspiciousActivity(i,t,n),n.count>=this.config.maxRequests){this.config.onLimitReached&&this.config.onLimitReached(t,n.count);const e=Math.ceil((n.resetTime-s)/1e3);return{allowed:!1,remaining:0,resetTime:n.resetTime,retryAfter:e,warning:n.suspiciousActivity?"Suspicious activity detected":void 0}}return n.count++,{allowed:!0,remaining:this.config.maxRequests-n.count,resetTime:n.resetTime}}isWhitelisted(e){return!!this.config.whitelist&&this.config.whitelist.some((t=>t===e||("localhost"===t&&("127.0.0.1"===e||"::1"===e||"localhost"===e)||"127.0.0.1"===t&&("localhost"===e||"::1"===e))))}detectSuspiciousActivity(e,t,i){if(this.config.isDevelopment&&this.isWhitelisted(t))return;const s=this.config.suspiciousThreshold||(this.config.isDevelopment?.95:.9);i.count>=this.config.maxRequests*s&&(i.suspiciousActivity=!0,this.suspiciousIPs.add(t),this.config.isDevelopment?console.log(`‚ö†Ô∏è High activity detected from ${t} - Key: ${e} (Development mode)`):console.warn(`üö® Suspicious activity detected from ${t} - Key: ${e}`))}isSuspicious(e){return this.suspiciousIPs.has(e)}cleanup(){const e=Date.now();let t=0;for(const[i,s]of this.store.entries())s.resetTime<=e&&(this.store.delete(i),t++);const i=e-36e5;for(const e of this.suspiciousIPs){const t=this.store.get(e);(!t||t.resetTime<=i)&&this.suspiciousIPs.delete(e)}t>0&&console.log(`üßπ Rate limiter cleanup: removed ${t} expired entries`)}getStats(){return{totalEntries:this.store.size,suspiciousIPs:this.suspiciousIPs.size}}resetLimit(e){return this.store.delete(e)}clearAllLimits(){if(!this.config.isDevelopment)return console.warn("‚ö†Ô∏è clearAllLimits() can only be used in development mode"),!1;const e=this.store.size,t=this.suspiciousIPs.size;return this.store.clear(),this.suspiciousIPs.clear(),console.log(`üßπ Development: Cleared ${e} rate limit entries and ${t} suspicious IPs`),!0}clearSuspiciousIP(e){return this.suspiciousIPs.delete(e)}destroy(){this.cleanupInterval&&clearInterval(this.cleanupInterval),this.store.clear(),this.suspiciousIPs.clear()}}function createTokenRateLimiter(e){const t="undefined"!=typeof globalThis&&!0===globalThis.import?.meta?.env?.DEV||void 0!==import.meta&&!0===Object.assign(__vite_import_meta_env__,{NODE_ENV:"production",_:process.env._,NODE:process.env.NODE})?.DEV||"undefined"!=typeof window;return new AdvancedRateLimiter({...{windowMs:6e4,maxRequests:t?50:10,skipSuccessfulRequests:!1,isDevelopment:t,whitelist:t?["localhost","127.0.0.1","::1","0.0.0.0","unknown"]:[],suspiciousThreshold:t?.95:.8,keyGenerator:(e,t)=>`${t}:${(e.headers.get("user-agent")||"").substring(0,10)}`,onLimitReached:(e,i)=>{t?console.log(`‚ÑπÔ∏è Rate limit reached for ${e} - Attempts: ${i} (Development mode)`):console.warn(`üö´ Rate limit exceeded for ${e} - Attempts: ${i}`)}},...e})}function createProxyRateLimiter(e){const t="undefined"!=typeof globalThis&&!0===globalThis.import?.meta?.env?.DEV||void 0!==import.meta&&!0===Object.assign(__vite_import_meta_env__,{NODE_ENV:"production",_:process.env._,NODE:process.env.NODE})?.DEV;return new AdvancedRateLimiter({...{windowMs:6e4,maxRequests:t?200:50,skipSuccessfulRequests:!1,isDevelopment:t,whitelist:t?["localhost","127.0.0.1","::1","0.0.0.0","unknown"]:[],suspiciousThreshold:t?.95:.8,keyGenerator:(e,t)=>{const i=e.headers.get("authorization");return`proxy:${t}:${i?i.substring(-8):""}`},onLimitReached:(e,t)=>{console.warn(`üö´ Proxy rate limit exceeded for ${e} - Attempts: ${t}`)}},...e})}function createRateLimitMiddleware(e){return(t,i)=>{const s=e.checkLimit(t,i);if(!s.allowed){const t={"Content-Type":"application/json","X-RateLimit-Limit":e.config.maxRequests.toString(),"X-RateLimit-Remaining":s.remaining.toString(),"X-RateLimit-Reset":Math.ceil(s.resetTime/1e3).toString()};return s.retryAfter&&(t["Retry-After"]=s.retryAfter.toString()),new Response(JSON.stringify({success:!1,error:"Rate limit exceeded. Please try again later.",retryAfter:s.retryAfter,warning:s.warning}),{status:429,headers:t})}return null}}export{createRateLimitMiddleware as a,createTokenRateLimiter as b,createProxyRateLimiter as c};