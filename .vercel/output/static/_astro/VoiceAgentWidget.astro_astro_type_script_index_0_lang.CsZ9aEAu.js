class t{constructor(){this.widget=document.querySelector("[data-voice-agent-widget]"),this.fab=document.getElementById("voice-fab"),this.isOpen=!1,this.isRecording=!1,this.conversationContainer=document.getElementById("conversation-container"),this.textInput=document.getElementById("text-input"),this.sendButton=document.getElementById("send-button"),this.voiceToggle=document.getElementById("voice-toggle"),this.statusElement=document.getElementById("voice-status-text"),this.statusContainer=document.querySelector(".voice-status"),this.audioVisualizer=document.getElementById("audio-visualizer"),this.initializeEventListeners(),this.initializeWidget()}initializeWidget(){this.closeWidget(),this.textInput?.addEventListener("input",(()=>{const t=this.textInput.value.trim().length>0;this.sendButton.disabled=!t,this.sendButton.classList.toggle("btn-primary",t),this.sendButton.classList.toggle("btn-outline",!t)})),this.textInput?.addEventListener("keypress",(t=>{"Enter"!==t.key||t.shiftKey||(t.preventDefault(),this.sendTextMessage())}))}initializeEventListeners(){this.fab?.addEventListener("click",(()=>this.openWidget())),document.getElementById("voice-widget-close")?.addEventListener("click",(()=>this.closeWidget())),this.voiceToggle?.addEventListener("click",(()=>this.toggleVoiceRecording())),this.sendButton?.addEventListener("click",(()=>this.sendTextMessage())),document.addEventListener("keydown",(t=>{"Escape"===t.key&&this.isOpen&&this.closeWidget()}))}openWidget(){this.isOpen=!0,this.widget?.classList.remove("hidden"),this.widget?.classList.add("animate-slide-up"),this.fab?.classList.add("hidden"),this.fab?.setAttribute("data-widget-open","true"),setTimeout((()=>{this.textInput?.focus()}),300)}closeWidget(){this.isOpen=!1,this.widget?.classList.add("hidden"),this.fab?.classList.remove("hidden"),this.fab?.setAttribute("data-widget-open","false"),this.isRecording&&this.stopVoiceRecording()}toggleVoiceRecording(){this.isRecording?this.stopVoiceRecording():this.startVoiceRecording()}startVoiceRecording(){this.isRecording=!0,this.voiceToggle?.setAttribute("data-recording","true"),this.voiceToggle?.classList.add("bg-voice-recording","text-white"),this.voiceToggle?.classList.remove("btn-primary"),this.voiceToggle&&(this.voiceToggle.innerHTML='\n          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">\n            <rect x="6" y="6" width="12" height="12" rx="2"></rect>\n          </svg>\n        '),this.updateStatus("recording","Recording..."),this.startAudioVisualization(),window.dispatchEvent(new CustomEvent("voice-recording-start"))}stopVoiceRecording(){this.isRecording=!1,this.voiceToggle?.setAttribute("data-recording","false"),this.voiceToggle?.classList.remove("bg-voice-recording","text-white"),this.voiceToggle?.classList.add("btn-primary"),this.voiceToggle&&(this.voiceToggle.innerHTML='\n          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z"></path>\n          </svg>\n        '),this.updateStatus("processing","Processing..."),this.stopAudioVisualization(),window.dispatchEvent(new CustomEvent("voice-recording-stop"))}sendTextMessage(){const t=this.textInput?.value.trim();t&&(this.addMessage(t,"user"),this.textInput.value="",this.sendButton.disabled=!0,this.sendButton.classList.remove("btn-primary"),this.sendButton.classList.add("btn-outline"),this.showTypingIndicator(),window.dispatchEvent(new CustomEvent("voice-text-message",{detail:{message:t}})))}addMessage(t,e,i=!0){const s=document.createElement("div");s.className=`message-bubble ${e}`,i&&s.classList.add("animate-slide-up");const n=document.createElement("p");n.className="text-sm",n.textContent=t,s.appendChild(n),this.conversationContainer?.appendChild(s),this.scrollToBottom()}showTypingIndicator(){const t=document.createElement("div");t.className="message-bubble typing",t.id="typing-indicator";const e=document.createElement("div");e.className="typing-indicator",e.innerHTML='\n        <div class="typing-dot"></div>\n        <div class="typing-dot"></div>\n        <div class="typing-dot"></div>\n      ',t.appendChild(e),this.conversationContainer?.appendChild(t),this.scrollToBottom()}hideTypingIndicator(){document.getElementById("typing-indicator")?.remove()}updateStatus(t,e){this.statusElement&&(this.statusElement.textContent=e),this.statusContainer&&(this.statusContainer.className=`voice-status ${t}`,this.statusContainer.setAttribute("data-status",t))}startAudioVisualization(){this.audioVisualizer?.classList.add("active")}stopAudioVisualization(){this.audioVisualizer?.classList.remove("active")}scrollToBottom(){setTimeout((()=>{this.conversationContainer&&(this.conversationContainer.scrollTop=this.conversationContainer.scrollHeight)}),100)}onConnected(){this.updateStatus("connected","Connected")}onDisconnected(){this.updateStatus("error","Disconnected")}onMessage(t){this.hideTypingIndicator(),this.addMessage(t,"assistant")}onError(t){this.hideTypingIndicator(),this.updateStatus("error","Error occurred"),this.addMessage("Sorry, I encountered an error. Please try again.","assistant")}}document.addEventListener("DOMContentLoaded",(()=>{window.voiceAgentWidget=new t,window.addEventListener("voice-agent-ready",(()=>{window.voiceAgentWidget?.onConnected()}))}));