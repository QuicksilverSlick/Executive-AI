class AudioFileGenerator{constructor(){this.audioContext=null,this.sampleRate=44100}async init(){this.audioContext=new(window.AudioContext||window.webkitAudioContext)({sampleRate:this.sampleRate}),"suspended"===this.audioContext.state&&await this.audioContext.resume()}generateTone(e,t,a=null){const o=this.sampleRate*t,n=this.audioContext.createBuffer(1,o,this.sampleRate),s=n.getChannelData(0);for(let n=0;n<o;n++){const o=n/this.sampleRate;let r=Math.sin(2*Math.PI*e*o);a&&(r*=a(o,t)),s[n]=.3*r}return n}generateNoise(e,t="pink"){const a=this.sampleRate*e,o=this.audioContext.createBuffer(1,a,this.sampleRate),n=o.getChannelData(0);let s,r,i,l,c,h,d;s=r=i=l=c=h=d=0;for(let e=0;e<a;e++){let a=2*Math.random()-1;"pink"===t?(s=.99886*s+.0555179*a,r=.99332*r+.0750759*a,i=.969*i+.153852*a,l=.8665*l+.3104856*a,c=.55*c+.5329522*a,h=-.7616*h-.016898*a,n[e]=.05*(s+r+i+l+c+h+d+.5362*a),d=.115926*a):n[e]=.1*a}return o}static envelopes={adsr:(e,t,a,o)=>(n,s)=>{if(n<e)return n/e;if(n<e+t)return 1-(n-e)/t*(1-a);if(n<s-o)return a;return a*(1-(n-(s-o))/o)},fadeInOut:(e=.1)=>(t,a)=>t<e?t/e:t>a-e?(a-t)/e:1,bell:()=>(e,t)=>Math.exp(3*-e)*Math.cos(20*e)};async generateSearchStart(){const e=.8,t=this.generateTone(800,e,AudioFileGenerator.envelopes.adsr(.05,.2,.3,.55)),a=this.generateTone(1200,.7*e,AudioFileGenerator.envelopes.adsr(.1,.15,.2,.45)),o=this.generateTone(1600,.4,AudioFileGenerator.envelopes.adsr(.15,.1,.1,.25)),n=this.audioContext.createBuffer(1,this.sampleRate*e,this.sampleRate),s=n.getChannelData(0),r=t.getChannelData(0),i=a.getChannelData(0),l=o.getChannelData(0);for(let e=0;e<s.length;e++)s[e]=.6*(r[e]||0)+.3*(i[e]||0)+.1*(l[e]||0);return n}async generateProcessingLoop(){const e=this.generateNoise(4,"pink"),t=this.generateTone(200,4,(e=>.1*(.5*Math.sin(.5*e)+.5))),a=this.audioContext.createBuffer(1,4*this.sampleRate,this.sampleRate),o=a.getChannelData(0),n=e.getChannelData(0),s=t.getChannelData(0);for(let e=0;e<o.length;e++){o[e]=.3*n[e]+.7*s[e];const t=e/this.sampleRate,a=.2;t<a?o[e]*=t/a:t>4-a&&(o[e]*=(4-t)/a)}return a}async generateSearchComplete(){const e=[523,659,784,1047],t=1/e.length,a=this.audioContext.createBuffer(1,1*this.sampleRate,this.sampleRate),o=a.getChannelData(0);return e.forEach(((e,a)=>{const n=Math.floor(a*t*this.sampleRate),s=Math.floor((a+1)*t*this.sampleRate);for(let a=n;a<s&&a<o.length;a++){const s=(a-n)/this.sampleRate,r=t,i=AudioFileGenerator.envelopes.adsr(.02,.1,.4,r-.12);o[a]+=Math.sin(2*Math.PI*e*s)*i(s,r)*.4}})),a}async generateSearchError(){const e=.25,t=this.audioContext.createBuffer(1,.7*this.sampleRate,this.sampleRate),a=t.getChannelData(0);return[880,698,587].forEach(((t,o)=>{const n=Math.floor(o*e*this.sampleRate),s=Math.floor(e*this.sampleRate);for(let o=0;o<s&&n+o<a.length;o++){const s=o/this.sampleRate,r=AudioFileGenerator.envelopes.adsr(.05,.08,.3,.12);a[n+o]+=Math.sin(2*Math.PI*t*s)*r(s,e)*.3}})),t}async audioBufferToBlob(e,t="audio/webm"){const a=new OfflineAudioContext(e.numberOfChannels,e.length,e.sampleRate),o=a.createBufferSource();o.buffer=e,o.connect(a.destination),o.start(0);const n=await a.startRendering();return this.audioBufferToWavBlob(n)}audioBufferToWavBlob(e){const t=e.length,a=new ArrayBuffer(44+2*t),o=new DataView(a),n=[e.getChannelData(0)],s=(e,t)=>{for(let a=0;a<t.length;a++)o.setUint8(e+a,t.charCodeAt(a))};s(0,"RIFF"),o.setUint32(4,36+2*t,!0),s(8,"WAVE"),s(12,"fmt "),o.setUint32(16,16,!0),o.setUint16(20,1,!0),o.setUint16(22,1,!0),o.setUint32(24,e.sampleRate,!0),o.setUint32(28,2*e.sampleRate,!0),o.setUint16(32,2,!0),o.setUint16(34,16,!0),s(36,"data"),o.setUint32(40,2*t,!0);let r=44;for(let e=0;e<t;e++){const t=Math.max(-1,Math.min(1,n[0][e]));o.setInt16(r,32767*t,!0),r+=2}return new Blob([a],{type:"audio/wav"})}downloadBlob(e,t){const a=URL.createObjectURL(e),o=document.createElement("a");o.href=a,o.download=t,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(a)}async generateAllFiles(){await this.init(),console.log("Generating voice agent audio files...");try{console.log("Generating search-start sound...");const e=await this.generateSearchStart(),t=await this.audioBufferToBlob(e);this.downloadBlob(t,"search-start.wav"),console.log("Generating processing-loop sound...");const a=await this.generateProcessingLoop(),o=await this.audioBufferToBlob(a);this.downloadBlob(o,"processing-loop.wav"),console.log("Generating search-complete sound...");const n=await this.generateSearchComplete(),s=await this.audioBufferToBlob(n);this.downloadBlob(s,"search-complete.wav"),console.log("Generating search-error sound...");const r=await this.generateSearchError(),i=await this.audioBufferToBlob(r);this.downloadBlob(i,"search-error.wav"),console.log("All audio files generated! Convert WAV files to WebM using ffmpeg:"),console.log("ffmpeg -i search-start.wav -c:a libopus -b:a 32k search-start.webm"),console.log("ffmpeg -i processing-loop.wav -c:a libopus -b:a 32k processing-loop.webm"),console.log("ffmpeg -i search-complete.wav -c:a libopus -b:a 32k search-complete.webm"),console.log("ffmpeg -i search-error.wav -c:a libopus -b:a 32k search-error.webm")}catch(e){console.error("Error generating audio files:",e)}}}const generator=new AudioFileGenerator;document.addEventListener("DOMContentLoaded",(()=>{const e=document.createElement("button");e.textContent="Generate Voice Agent Audio Files",e.style.cssText="\n    padding: 10px 20px;\n    font-size: 16px;\n    background: #1976d2;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    margin: 20px;\n  ",e.onclick=()=>{e.disabled=!0,e.textContent="Generating...",generator.generateAllFiles().finally((()=>{e.disabled=!1,e.textContent="Generate Voice Agent Audio Files"}))},document.body.insertBefore(e,document.body.firstChild)})),"undefined"!=typeof module&&module.exports&&(module.exports=AudioFileGenerator);