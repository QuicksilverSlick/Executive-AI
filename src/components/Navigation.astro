---
import ThemeToggle from './ThemeToggle.astro';
import Icon from './Icon.astro';

// Get current page path
const currentPath = Astro.url.pathname;
const isHomePage = currentPath === '/';

// Navigation items
const navItems = [
  { href: '/', label: 'Home', showOnHome: false },
  { href: '/services', label: 'Services', showOnHome: true },
  { href: '/case-studies', label: 'Case Studies', showOnHome: true },
  { href: '/resources', label: 'Resources', showOnHome: true },
  { href: '/about', label: 'About', showOnHome: true },
];

// Filter nav items based on current page
const visibleNavItems = navItems.filter(item => 
  !isHomePage || item.showOnHome
);
---

<nav class="nav-container">
  <div class="nav-inner">
    <!-- Logo -->
    <a href="/" class="nav-logo">
      <span class="text-2xl font-bold text-brand-charcoal dark:text-dark-text">
        Executive<span class="text-gradient">AI</span>
      </span>
    </a>
    
    <!-- Desktop Navigation -->
    <div class="nav-desktop">
      <div class="nav-links-wrapper">
        {visibleNavItems.map((item) => (
          <a 
            href={item.href} 
            class={`nav-link text-brand-charcoal dark:text-dark-text-secondary hover:text-brand-navy dark:hover:text-accent-gold transition-colors ${
              currentPath === item.href ? 'font-medium text-brand-navy dark:text-accent-gold' : ''
            }`}
          >
            {item.label}
          </a>
        ))}
      </div>
      <div class="nav-actions">
        <ThemeToggle />
        <a href="#schedule" class="btn-primary nav-cta">Schedule Strategy Session</a>
      </div>
    </div>
    
    <!-- Mobile Menu Button -->
    <button 
      id="mobile-menu-btn"
      class="md:hidden p-2 text-brand-charcoal dark:text-dark-text hover:text-brand-navy dark:hover:text-accent-gold transition-colors"
      aria-label="Toggle mobile menu"
    >
      <Icon name="lucide:menu" class="w-6 h-6 menu-icon" />
      <Icon name="lucide:x" class="w-6 h-6 close-icon hidden" />
    </button>
  </div>
  
  <!-- Mobile Navigation -->
  <div id="mobile-menu" class="hidden md:hidden py-4 border-t border-gray-100 dark:border-dark-border">
    <div class="flex flex-col space-y-4">
      {visibleNavItems.map((item) => (
        <a 
          href={item.href} 
          class={`text-brand-charcoal dark:text-dark-text hover:text-brand-navy dark:hover:text-accent-gold transition-colors py-2 ${
            currentPath === item.href ? 'font-medium text-brand-navy dark:text-accent-gold' : ''
          }`}
        >
          {item.label}
        </a>
      ))}
      <div class="flex items-center justify-between py-2">
        <span class="text-brand-charcoal dark:text-dark-text">Theme</span>
        <ThemeToggle />
      </div>
      <a href="#schedule" class="btn-primary text-center">Schedule Strategy Session</a>
    </div>
  </div>
</nav>

<style>
  /* Navigation container */
  .nav-container {
    width: 100%;
    padding: 0 1.5rem; /* 24px */
  }

  .nav-inner {
    max-width: 1440px; /* Wider max-width for better full-screen experience */
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
    height: 5rem; /* 80px */
  }

  /* Logo styling */
  .nav-logo {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    margin-right: 3rem; /* 48px - Good spacing from navigation */
  }

  /* Desktop navigation wrapper */
  .nav-desktop {
    display: none;
    flex: 1;
    align-items: center;
    justify-content: space-between;
  }

  @media (min-width: 768px) {
    .nav-desktop {
      display: flex;
    }
  }

  /* Navigation links wrapper */
  .nav-links-wrapper {
    display: flex;
    align-items: center;
    gap: 2.5rem; /* 40px - Comfortable spacing between links */
  }

  /* Navigation actions (theme toggle + CTA) */
  .nav-actions {
    display: flex;
    align-items: center;
    gap: 1.5rem; /* 24px */
  }

  /* Navigation link styles */
  .nav-link {
    position: relative;
    padding: 0.5rem 0;
    white-space: nowrap;
    font-size: 1rem; /* 16px */
    font-weight: 500;
    transition: all 0.2s ease;
  }

  /* Add hover underline effect */
  .nav-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: currentColor;
    transition: width 0.2s ease;
  }

  .nav-link:hover::after {
    width: 100%;
  }

  /* CTA button specific styles */
  .nav-cta {
    white-space: nowrap;
    font-size: 0.938rem; /* 15px */
    padding: 0.75rem 1.5rem; /* 12px 24px */
  }

  /* Tablet adjustments (768px - 1023px) */
  @media (min-width: 768px) and (max-width: 1023px) {
    .nav-container {
      padding: 0 1.25rem;
    }

    .nav-inner {
      max-width: 100%;
    }

    .nav-logo {
      margin-right: 2rem;
    }

    .nav-links-wrapper {
      gap: 1.5rem;
    }

    .nav-link {
      font-size: 0.875rem;
    }

    .nav-actions {
      gap: 1rem;
    }

    .nav-cta {
      font-size: 0.813rem;
      padding: 0.625rem 1.25rem;
    }
  }

  /* iPad Pro and large tablets (1024px - 1366px) */
  @media (min-width: 1024px) and (max-width: 1366px) {
    .nav-container {
      padding: 0 1.5rem;
    }

    .nav-logo {
      margin-right: 2.5rem;
    }
    
    .nav-links-wrapper {
      gap: 1.75rem;
    }
    
    .nav-link {
      font-size: 0.938rem;
    }
    
    .nav-cta {
      font-size: 0.875rem;
      padding: 0.625rem 1.375rem;
    }
  }

  /* Surface Pro specific (narrower viewport) */
  @media (min-width: 1024px) and (max-width: 1280px) {
    .nav-links-wrapper {
      gap: 1.5rem;
    }
    
    .nav-link {
      font-size: 0.875rem;
    }
  }

  /* Extra large screens (1920px+) */
  @media (min-width: 1920px) {
    .nav-container {
      padding: 0 2rem;
    }

    .nav-inner {
      max-width: 1680px;
    }
    
    .nav-logo {
      margin-right: 4rem;
    }

    .nav-links-wrapper {
      gap: 3rem;
    }
    
    .nav-link {
      font-size: 1.125rem;
    }
    
    .nav-cta {
      font-size: 1rem;
      padding: 0.875rem 2rem;
    }
  }

  /* Mobile menu styles */
  @media (max-width: 767px) {
    .nav-inner {
      height: 4rem; /* 64px */
    }

    .nav-logo {
      margin-right: 0;
    }

    .nav-logo .text-2xl {
      font-size: 1.5rem; /* 24px */
    }

    #mobile-menu {
      background-color: rgb(var(--color-brand-pearl) / 0.98);
      border-top: 1px solid rgb(var(--color-gray-100));
    }

    #mobile-menu.dark {
      background-color: rgb(var(--color-dark-surface-2) / 0.98);
      border-color: rgb(var(--color-dark-border));
    }

    #mobile-menu a {
      display: block;
      padding: 1rem 0;
      font-size: 1.125rem;
    }

    #mobile-menu .btn-primary {
      margin-top: 1rem;
    }
  }
</style>

<script>
  // Mobile menu toggle
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  const menuIcon = mobileMenuBtn?.querySelector('.menu-icon');
  const closeIcon = mobileMenuBtn?.querySelector('.close-icon');

  mobileMenuBtn?.addEventListener('click', () => {
    const isOpen = !mobileMenu?.classList.contains('hidden');
    
    if (isOpen) {
      mobileMenu?.classList.add('hidden');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
    } else {
      mobileMenu?.classList.remove('hidden');
      menuIcon?.classList.add('hidden');
      closeIcon?.classList.remove('hidden');
    }
  });

  // Close mobile menu when clicking outside
  document.addEventListener('click', (e) => {
    if (!mobileMenuBtn?.contains(e.target as Node) && !mobileMenu?.contains(e.target as Node)) {
      mobileMenu?.classList.add('hidden');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
    }
  });
</script>