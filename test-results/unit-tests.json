{"numTotalTestSuites":2,"numPassedTestSuites":2,"numFailedTestSuites":0,"numPendingTestSuites":0,"numTotalTests":3,"numPassedTests":0,"numFailedTests":3,"numPendingTests":0,"numTodoTests":0,"startTime":1754834301819,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["","WebRTC Session Restoration with History Injection"],"fullName":" WebRTC Session Restoration with History Injection should inject conversation history after session.created event","status":"failed","title":"should inject conversation history after session.created event","duration":15031,"failureMessages":["Test timed out in 15000ms.\nIf this is a long-running test, pass a timeout value as the last argument or configure it globally with \"testTimeout\"."]},{"ancestorTitles":["","WebRTC Session Restoration with History Injection"],"fullName":" WebRTC Session Restoration with History Injection should not inject history for new sessions","status":"failed","title":"should not inject history for new sessions","duration":16,"failureMessages":["this.connection.on is not a function"],"location":{"line":666,"column":21}},{"ancestorTitles":["","WebRTC Session Restoration with History Injection"],"fullName":" WebRTC Session Restoration with History Injection should handle history injection errors gracefully","status":"failed","title":"should handle history injection errors gracefully","duration":10,"failureMessages":["this.connection.on is not a function"],"location":{"line":666,"column":21}}],"startTime":1754834302733,"endTime":1754834317790,"status":"failed","message":"","name":"/home/dreamforge/ai_masterclass/executive-ai-training/src/tests/integration/session-restoration-history.test.ts"}]}