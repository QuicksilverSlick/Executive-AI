---
/*
 * Voice Search Test Page
 * Test the complete voice agent web search functionality
 */
export const prerender = false;
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Voice Agent Search Test</title>
  <style>
    body {
      font-family: system-ui, -apple-system, sans-serif;
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
      background: #f5f7fa;
    }
    
    .header {
      background: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      margin-bottom: 20px;
    }
    
    .test-section {
      background: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      margin-bottom: 20px;
    }
    
    .test-queries {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 15px;
      margin: 20px 0;
    }
    
    .query-card {
      background: #f8f9fa;
      padding: 15px;
      border-radius: 6px;
      border: 1px solid #e0e0e0;
      cursor: pointer;
      transition: all 0.2s;
    }
    
    .query-card:hover {
      background: #e8f4f8;
      border-color: #1976d2;
    }
    
    .query-card h3 {
      margin: 0 0 10px 0;
      color: #333;
      font-size: 16px;
    }
    
    .query-card p {
      margin: 0;
      color: #666;
      font-size: 14px;
    }
    
    .console {
      background: #1e1e1e;
      color: #d4d4d4;
      padding: 20px;
      border-radius: 6px;
      font-family: 'Consolas', 'Monaco', monospace;
      font-size: 13px;
      height: 400px;
      overflow-y: auto;
      margin-top: 20px;
    }
    
    .log-entry {
      margin: 5px 0;
      padding: 5px;
    }
    
    .log-entry.info { color: #4fc3f7; }
    .log-entry.success { color: #81c784; }
    .log-entry.error { color: #e57373; }
    .log-entry.warning { color: #ffb74d; }
    .log-entry.search { color: #ba68c8; }
    
    .controls {
      display: flex;
      gap: 10px;
      margin: 20px 0;
    }
    
    button {
      padding: 10px 20px;
      border: none;
      border-radius: 6px;
      font-size: 14px;
      cursor: pointer;
      transition: all 0.2s;
    }
    
    .btn-primary {
      background: #1976d2;
      color: white;
    }
    
    .btn-primary:hover {
      background: #1565c0;
    }
    
    .btn-secondary {
      background: #757575;
      color: white;
    }
    
    .btn-secondary:hover {
      background: #616161;
    }
    
    .status {
      padding: 10px;
      border-radius: 6px;
      margin: 10px 0;
      font-size: 14px;
    }
    
    .status.connected {
      background: #e8f5e9;
      color: #2e7d32;
    }
    
    .status.disconnected {
      background: #ffebee;
      color: #c62828;
    }
    
    .results {
      margin-top: 20px;
    }
    
    .result-item {
      background: #f5f5f5;
      padding: 15px;
      border-radius: 6px;
      margin: 10px 0;
    }
    
    .result-item h4 {
      margin: 0 0 5px 0;
      color: #1976d2;
    }
    
    .result-item .url {
      color: #666;
      font-size: 12px;
    }
    
    .result-item .snippet {
      margin-top: 5px;
      color: #333;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <div class="header">
    <h1>üîç Voice Agent Web Search Test</h1>
    <p>Test the complete voice search functionality with the OpenAI Responses API</p>
  </div>

  <div class="test-section">
    <h2>Quick Test Queries</h2>
    <p>Click any query below to test it with the voice agent:</p>
    
    <div class="test-queries">
      <div class="query-card" data-query="Search for Drip City Coffee in Oakland">
        <h3>‚òï Coffee Shop Search</h3>
        <p>"Search for Drip City Coffee in Oakland"</p>
      </div>
      
      <div class="query-card" data-query="Look up Home Depot in Tulsa Oklahoma">
        <h3>üè™ Store Locator</h3>
        <p>"Look up Home Depot in Tulsa Oklahoma"</p>
      </div>
      
      <div class="query-card" data-query="Find information about SRI Energy company">
        <h3>üè¢ Company Info</h3>
        <p>"Find information about SRI Energy company"</p>
      </div>
      
      <div class="query-card" data-query="What's the latest news about AI training in 2025">
        <h3>üì∞ Current News</h3>
        <p>"What's the latest news about AI training in 2025"</p>
      </div>
      
      <div class="query-card" data-query="Search for executive AI transformation strategies">
        <h3>üíº Business Search</h3>
        <p>"Search for executive AI transformation strategies"</p>
      </div>
      
      <div class="query-card" data-query="Find restaurants near Times Square New York">
        <h3>üçï Restaurant Search</h3>
        <p>"Find restaurants near Times Square New York"</p>
      </div>
    </div>
  </div>

  <div class="test-section">
    <h2>Manual Test</h2>
    <div class="controls">
      <input type="text" id="manual-query" placeholder="Enter your search query..." style="flex: 1; padding: 10px; border: 1px solid #ddd; border-radius: 6px;">
      <button class="btn-primary" onclick="testSearch()">Test Search</button>
      <button class="btn-secondary" onclick="clearConsole()">Clear Console</button>
    </div>
    
    <div id="status" class="status disconnected">
      Voice Agent: Not Connected
    </div>
  </div>

  <div class="test-section">
    <h2>Test Results</h2>
    <div id="results" class="results">
      <p style="color: #666;">No search results yet. Click a query card or enter your own query to test.</p>
    </div>
  </div>

  <div class="test-section">
    <h2>Debug Console</h2>
    <div id="console" class="console">
      <div class="log-entry info">üöÄ Voice Search Test Page Initialized</div>
      <div class="log-entry info">üìã Ready to test search queries</div>
    </div>
  </div>


  <script>
    // Console logging
    function log(message, type = 'info') {
      const console = document.getElementById('console');
      const entry = document.createElement('div');
      entry.className = `log-entry ${type}`;
      entry.textContent = `[${new Date().toLocaleTimeString()}] ${message}`;
      console.appendChild(entry);
      console.scrollTop = console.scrollHeight;
    }

    // Clear console
    function clearConsole() {
      document.getElementById('console').innerHTML = '';
      log('Console cleared', 'info');
    }

    // Test search directly via API
    async function testSearch(query) {
      query = query || document.getElementById('manual-query').value;
      
      if (!query) {
        log('Please enter a search query', 'warning');
        return;
      }

      log(`üîç Testing search: "${query}"`, 'search');
      
      try {
        const response = await fetch('/api/voice-agent/responses-search', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ query })
        });

        const data = await response.json();
        
        if (data.success) {
          log('‚úÖ Search API call successful', 'success');
          
          if (data.response) {
            log(`üìù Response: ${data.response.substring(0, 100)}...`, 'info');
          }
          
          if (data.searchResults && data.searchResults.length > 0) {
            log(`üîç Found ${data.searchResults.length} search results`, 'success');
            displayResults(data);
          } else {
            log('‚ö†Ô∏è No search results returned', 'warning');
          }
          
          if (data.citations && data.citations.length > 0) {
            log(`üìö Found ${data.citations.length} citations`, 'info');
          }
          
        } else {
          log(`‚ùå Search failed: ${data.error}`, 'error');
        }
      } catch (error) {
        log(`‚ùå API Error: ${error.message}`, 'error');
      }
    }

    // Display search results
    function displayResults(data) {
      const resultsDiv = document.getElementById('results');
      
      let html = '<h3>Search Response:</h3>';
      html += `<p>${data.response}</p>`;
      
      if (data.searchResults && data.searchResults.length > 0) {
        html += '<h3>Search Results:</h3>';
        data.searchResults.forEach((result, i) => {
          html += `
            <div class="result-item">
              <h4>${i + 1}. ${result.title}</h4>
              <div class="url">${result.url}</div>
              <div class="snippet">${result.snippet}</div>
            </div>
          `;
        });
      }
      
      resultsDiv.innerHTML = html;
    }

    // Note: Voice agent initialization removed to focus on API testing
    // The voice agent is available on the main page

    // Query card click handlers
    document.querySelectorAll('.query-card').forEach(card => {
      card.addEventListener('click', () => {
        const query = card.dataset.query;
        document.getElementById('manual-query').value = query;
        testSearch(query);
      });
    });

    // Initialize on load
    window.addEventListener('load', () => {
      log('üìã Test page ready. Click a query card or enter a custom query to test.', 'info');
      document.getElementById('status').textContent = 'API Test Mode - No Voice Connection Required';
    });
  </script>
</body>
</html>